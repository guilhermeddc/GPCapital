# Generated by Django 2.2.1 on 2019-08-17 22:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChoicesCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255, verbose_name='Cidade')),
                ('state', models.CharField(max_length=5, verbose_name='UF')),
                ('cep', models.CharField(max_length=10, null=True, verbose_name='Cep')),
                ('ibge_code', models.CharField(max_length=255, verbose_name='Código IBGE')),
                ('area', models.FloatField(null=True, verbose_name='Area')),
                ('subordinate_municipality', models.IntegerField(verbose_name='Município subordinado')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
                'db_table': 'choices_city',
                'ordering': ['state', 'city'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesCustomerService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_service', models.CharField(max_length=50, verbose_name='Tipos de atendimento')),
            ],
            options={
                'verbose_name': 'Atendimento',
                'verbose_name_plural': 'Atendimentos',
                'db_table': 'choices_customer_service',
                'ordering': ['customer_service'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesEthnicity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethnicity', models.CharField(max_length=50, verbose_name='Etnia')),
            ],
            options={
                'verbose_name': 'Etnia',
                'verbose_name_plural': 'Etnias',
                'db_table': 'choices_ethnicity',
                'ordering': ['ethnicity'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesEyeColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eye_color', models.CharField(max_length=75, verbose_name='Cor do olho')),
            ],
            options={
                'verbose_name': 'Cor do olho',
                'verbose_name_plural': 'Cores dos olhos',
                'db_table': 'choices_eye_color',
                'ordering': ['eye_color'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=50, verbose_name='Gênero')),
            ],
            options={
                'verbose_name': 'Gênero',
                'verbose_name_plural': 'Gêneros',
                'db_table': 'choices_genre',
                'ordering': ['genre'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesHairColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hair_color', models.CharField(max_length=50, verbose_name='Cor do cabelo')),
            ],
            options={
                'verbose_name': 'Cor de cabelo',
                'verbose_name_plural': 'Cores de cabelo',
                'db_table': 'choices_hair_color',
                'ordering': ['hair_color'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesPaymentAccepted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.CharField(max_length=50, verbose_name='Pagamento')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'db_table': 'choices_payment_accepted',
                'ordering': ['payment'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=50, verbose_name='Lugares')),
            ],
            options={
                'verbose_name': 'Lugar',
                'verbose_name_plural': 'Lugares',
                'db_table': 'choices_place',
                'ordering': ['place'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesServicesOffered',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('services', models.CharField(max_length=50, verbose_name='Serviços')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'db_table': 'choices_services_offered',
                'ordering': ['services'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesStates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uf', models.CharField(max_length=5, verbose_name='UF')),
                ('state', models.CharField(max_length=75, verbose_name='Estado')),
                ('ibge_code', models.IntegerField(verbose_name='Código IBGE')),
            ],
            options={
                'verbose_name': 'UF',
                'verbose_name_plural': 'UF',
                'db_table': 'choices_states',
                'ordering': ['uf'],
            },
        ),
        migrations.CreateModel(
            name='ChoicesStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, unique=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Status',
                'db_table': 'choices_status',
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='slug')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('fake_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apelido')),
                ('short_description', models.TextField(blank=True, max_length=50, null=True, verbose_name='Pequena descrição')),
                ('description', models.TextField(blank=True, max_length=250, null=True, verbose_name='Descrição')),
                ('image_profile', models.ImageField(blank=True, null=True, upload_to='Media', verbose_name='Imagem de Perfil')),
                ('image_thumb', models.ImageField(upload_to='Media', verbose_name='Thumb')),
                ('profile_priority', models.PositiveIntegerField(verbose_name='Prioridade do Profile')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Idade')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Peso(kg)')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Altura(m)')),
                ('bust', models.FloatField(blank=True, null=True, verbose_name='Busto(cm)')),
                ('waist', models.FloatField(blank=True, null=True, verbose_name='Cintura(cm)')),
                ('butt', models.FloatField(blank=True, null=True, verbose_name='Bunda(cm)')),
                ('service_charged', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Cachê/Hr')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesCity', verbose_name='Cidade')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'client',
                'ordering': ['genre', 'profile_priority'],
            },
        ),
        migrations.CreateModel(
            name='InterClientServicesOffered',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.Client')),
                ('services_offered', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesServicesOffered')),
            ],
            options={
                'verbose_name': 'inter_client_services_offered',
                'verbose_name_plural': 'inter_client_services_offered',
                'db_table': 'inter_client_services_offered',
                'ordering': ['client', 'services_offered'],
                'unique_together': {('client', 'services_offered')},
            },
        ),
        migrations.CreateModel(
            name='InterClientPlacesAccepted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.Client')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesPlace')),
            ],
            options={
                'verbose_name': 'inter_client_places_accepted',
                'verbose_name_plural': 'inter_client_places_accepted',
                'db_table': 'inter_client_places_accepted',
                'ordering': ['client', 'place'],
                'unique_together': {('client', 'place')},
            },
        ),
        migrations.CreateModel(
            name='InterClientPaymentsAccepted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.Client')),
                ('payment_accepted', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesPaymentAccepted')),
            ],
            options={
                'verbose_name': 'inter_client_payments_accepted',
                'verbose_name_plural': 'inter_client_payments_accepted',
                'db_table': 'inter_client_payments_accepted',
                'ordering': ['client', 'payment_accepted'],
                'unique_together': {('client', 'payment_accepted')},
            },
        ),
        migrations.CreateModel(
            name='InterClientCustomerServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.Client')),
                ('customer_service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesCustomerService')),
            ],
            options={
                'verbose_name': 'inter_client_customer_services',
                'verbose_name_plural': 'inter_client_customer_services',
                'db_table': 'inter_client_customer_services',
                'ordering': ['client', 'customer_service'],
                'unique_together': {('client', 'customer_service')},
            },
        ),
        migrations.AddField(
            model_name='client',
            name='customer_services',
            field=models.ManyToManyField(through='app_gp.InterClientCustomerServices', to='app_gp.ChoicesCustomerService', verbose_name='Atendimentos'),
        ),
        migrations.AddField(
            model_name='client',
            name='ethnicity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesEthnicity', verbose_name='Etnia'),
        ),
        migrations.AddField(
            model_name='client',
            name='eye',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesEyeColor', verbose_name='Olhos'),
        ),
        migrations.AddField(
            model_name='client',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesGenre', verbose_name='Gênero'),
        ),
        migrations.AddField(
            model_name='client',
            name='hair',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesHairColor', verbose_name='Cabelos'),
        ),
        migrations.AddField(
            model_name='client',
            name='payments_accepted',
            field=models.ManyToManyField(through='app_gp.InterClientPaymentsAccepted', to='app_gp.ChoicesPaymentAccepted', verbose_name='Pagamentos Aceitos'),
        ),
        migrations.AddField(
            model_name='client',
            name='places_accepted',
            field=models.ManyToManyField(through='app_gp.InterClientPlacesAccepted', to='app_gp.ChoicesPlace', verbose_name='Lugares Aceitos'),
        ),
        migrations.AddField(
            model_name='client',
            name='services_offered',
            field=models.ManyToManyField(through='app_gp.InterClientServicesOffered', to='app_gp.ChoicesServicesOffered', verbose_name='Serviços Oferecidos'),
        ),
        migrations.AddField(
            model_name='client',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesStatus', verbose_name='Status'),
        ),
        migrations.CreateModel(
            name='ChoicesNeighborhoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('neighborhood', models.CharField(max_length=255, verbose_name='Bairro')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.ChoicesCity', verbose_name='Cidade')),
            ],
            options={
                'verbose_name': 'Bairro',
                'verbose_name_plural': 'Bairros',
                'db_table': 'choices_neighborhoods',
                'ordering': ['city', 'neighborhood'],
            },
        ),
        migrations.CreateModel(
            name='ClientVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='Media', verbose_name='Videos')),
                ('order_priority', models.PositiveIntegerField(verbose_name='Prioridade do Vídeo')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.Client')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'db_table': 'client_video',
                'ordering': ['client', 'order_priority'],
                'unique_together': {('client', 'order_priority')},
            },
        ),
        migrations.CreateModel(
            name='ClientPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='Media', verbose_name='Fotos')),
                ('order_priority', models.PositiveIntegerField(verbose_name='Prioridade da foto')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_gp.Client')),
            ],
            options={
                'verbose_name': 'Foto',
                'verbose_name_plural': 'Fotos',
                'db_table': 'client_photo',
                'ordering': ['client', 'order_priority'],
                'unique_together': {('client', 'order_priority')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='client',
            unique_together={('city', 'genre', 'profile_priority')},
        ),
    ]
